
import numpy as np 
import matplotlib as plt


#constante 

M = 1 #kg
V0 = 70 #m
g = 9,81 #m/s^2
dt = 0.1 #s
n = 0.00 #Etat
teta = np.pi/4

#fonction fondamentale ( accélération)

def f1(xp, yp) : #la composante horizontale de l'accélération
    return -(n/M)*xp 


def f2(xp, yp) : #la composante verticale de l'accélération
    return -(n/M)*yp - g 

# méthode d'euler

def euler(dt, x, y, xp, yp):    
    pi1 = xp + f1(xp, yp)*dt
    qi1 = yp + f2(xp, yp)*dt
    xi1 = x + xp*dt
    yi1 = y + yp*dt
    return np.array([pi1, qi1, xi1, yi1]) 



tab_x_euler = np.array([0.0])

tab_y_euler = np.array([0.0])

tab_xp_euler = np.array([V0*np.cos(teta)])

tab_yp_euler = np.array([V0*np.sin(teta)])

x = tab_x_euler[0]

y = tab_y_euler[0]

xp = tab_xp_euler[0]

yp = tab_yp_euler[0]

i= 0

while y >= 0 :     
    xp, yp, x, y = euler(dt, x, y ,xp ,yp)
    print(i,xp ,yp, x, y)
    i += 1
    print(i)
    print(x)
    tab_x_euler = np.append(tab_x_euler, x)
    tab_y_euler = np.append(tab_y_euler, y)
    tab_xp_euler = np.append(tab_xp_euler, xp)
    tab_yp_euler = np.append(tab_yp_euler, yp)
    
plt.plot(tab_x_euler, tab_y_euler, label = "mth euler")
plt.title("ballistique avec euler")
plt.show()
    
    
